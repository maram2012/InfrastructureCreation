version: 2.1
orbs:
  aws-cli: circleci/aws-cli@2.0.3
jobs:

    create_infrastructure:
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
              name: Create Cloudformation Stack
              command: |
                aws cloudformation deploy \
                  --template-file template.yml \
                  --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                  --region us-east-1
        - run:
              name: Configure server
              command: |
                 yum install -y tar gzip
                 aws ec2 describe-instances --region us-east-1 --query 'Reservations[*].Instances[*].PublicIpAddress' --output text >> inventory.txt
        - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
              root: .
          # Must be relative path from root
              paths:
                  - inventory.txt
    configure_infrastructure: 
      docker:
        - image: python:3.7-alpine3.11
      steps:
        - checkout
        - add_ssh_keys:
            fingerprints: ["fb:19:f8:d4:32:e1:6d:0e:47:5a:aa:a1:34:ba:d4:72"]
        - run:
            name: Install dependencies
            command: |
              apk add openssh-client
              apk add --update ansible
        - run:
            name: Configure server
            command: |
              pwd 
              ls
              ansible-playbook -i inventory main.yml
      # Exercise: Smoke Testing
    smoke_test:
      docker:
          - image: alpine:latest
      steps:
          - run: apk add --update curl
          - run:
                name: smoke test
                command: |
                    URL="https://blog.udacity.com/"
                    # Test if website exists
                    if curl -s --head ${URL} 
                    then
                      return 0
                    else
                      return 1
                    fi
                
workflows:
  BuildInfra:
    jobs:
      -  create_infrastructure
      -  configure_infrastructure